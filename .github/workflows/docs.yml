name: Documentation

on:
  push:
    branches: [ main ]
    paths:
      - 'docs/**'
      - 'README.md'
      - '.github/workflows/docs.yml'
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    name: Build Documentation
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4
    
    - name: Setup Pages
      uses: actions/configure-pages@v3
    
    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.21'
    
    - name: Build DDB and update stats
      run: |
        go build -o ddb .
        # Extract test count from test suite
        test_count=$(./test/run_tests.sh 2>&1 | grep "Total Tests:" | cut -d: -f2 | tr -d ' ' || echo "46")
        echo "Detected $test_count tests"
        
        # Update documentation with current test count
        sed -i "s/tests-[0-9]*%20passing/tests-${test_count}%20passing/g" docs/index.html || true
    
    - name: Validate HTML
      run: |
        # Basic HTML validation
        for file in docs/*.html; do
          if [ -f "$file" ]; then
            echo "Validating $file..."
            # Check for basic HTML structure
            if ! grep -q "<html" "$file" || ! grep -q "</html>" "$file"; then
              echo "Warning: $file may have invalid HTML structure"
            fi
          fi
        done
    
    - name: Check internal links
      run: |
        # Check for broken internal links in documentation
        for file in docs/*.html; do
          if [ -f "$file" ]; then
            echo "Checking links in $file..."
            # Extract links and verify referenced files exist
            grep -o 'href="[^"]*\.html"' "$file" | sed 's/href="//;s/"//' | while read link; do
              if [ "$link" != "#" ] && [ ! -f "docs/$link" ]; then
                echo "Warning: Broken link found: $link in $file"
              fi
            done
          fi
        done
    
    - name: Copy documentation files
      run: |
        mkdir -p _site
        cp -r docs/* _site/
        # Ensure index.html exists
        if [ ! -f "_site/index.html" ]; then
          echo "Error: No index.html found in docs/"
          exit 1
        fi
    
    - name: Upload artifact
      uses: actions/upload-pages-artifact@v2
      with:
        path: ./_site

  deploy:
    name: Deploy to GitHub Pages
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    
    steps:
    - name: Deploy to GitHub Pages
      id: deployment
      uses: actions/deploy-pages@v2
    
    - name: Verify deployment
      run: |
        echo "ðŸ“– Documentation deployed to: ${{ steps.deployment.outputs.page_url }}"